# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

# pr: none

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    git checkout $(Build.SourceBranchName)
    git remote add heroku https://heroku:$(heroku_token)@git.heroku.com/delta-frontend.git
    git push heroku $(Build.SourceBranchName)
  displayName: 'Delta Frontend Heroku Deployment'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

- script: |
    npm install
    npm run lint
    npm run build
  displayName: 'Delta Frontend PR Check'
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')

- script: |
    ./node_modules/.bin/next &
    cd tests/end_to_end
    npm install
    npm run test:preview
  displayName: 'Delta Frontend PR End to End Tests Check'
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')

- script: |
    cd tests/end_to_end
    ARGOS_COMMIT=$(Build.SourceVersion) ARGOS_BRANCH=$(Build.SourceBranch) \
    ./node_modules/.bin/argos upload screenshots/reference --token $(ARGOS_TOKEN) || true
  displayName: 'Delta Frontend PR End to End Tests Check'
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
